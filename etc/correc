Introduction
Please respect the following rules:
- Restez poli, courtois, respectueux et constructif pendant le processus
d'évaluation. Le bien-être de la communauté repose là-dessus.
- Identifiez avec la personne (ou le groupe) évalué les éventuelles
dysfonctionnements du travail. Prenez le temps d'en discuter et
débatez des problèmes identifiés.
- Vous devez prendre en compte qu'il peut y avoir de legères différences
d'interprétation entre les instructions du projet, son scope et ses
fonctionnalités. Gardez un esprit ouvert et notez de la manière la plus
honnête possible. La pédagogie n'est valide que si la peer-évaluation
est faite sérieusement.
Guidelines
- Ne notez que ce qui est contenu dans le dossier git cloné de l'étudiant
ou du groupe.
- Vérifiez que le dossier git de appartient bien à l'étudiant ou au groupe,
que le projet correspond bien, et que "git clone" est utilisé sur un dossier vide.
- Vérifiez scrupuleusement qu'aucun alias n'a été utilisé pour vous tromper et assurez
vous que vous corrigez bien le rendu officiel.
- Afin d'éviter toute surprise, vérifiez avec l'évalué les potentiels scripts
utilisés pour faciliter l'évaluation.
- Si, en temps qu'évaluateur, vous n'avez pas fait le projet courant, vous devez
lire le sujet en entier avant de commencer l'évaluation.
- Utilisez les flags disponibles pour signaler un rendu vide, un programme ne fonctionnant pas,
une erreur de norme, un problème de triche... Dans ces situations, l'évaluation est terminée
et la note est 0 (ou -42 en cas de triche). Cependant, à l'exception des cas de triche,
vous êtes encouragés à continuer la discussion sur le travail rendu (même si pas terminé)
pour identifier les problèmes qui ont causé cet échec et éviter de les reproduire dans le futur.
- Pendant toute la durée de l'évaluation, aucun segfault ou autre arrêt
du programme (inattendu, prémature ou incontrôlé) ne sera toléré. Dans ces cas-là,
la note finale est 0. Utilisez le flag approprié.
Vous ne devriez jamais avoir à éditer un fichier mis à part un fichier de configuration,
si celui-ci existe. Dans le cas ou vous souhaitez modifier un fichier, vous devez expliciter
clairement les raisons de l'édition et entre en accord avec l'étudiant évalué avant de faire
quoi que ce soit.
- Il vous revient également de vérifier l'absence de fuite mémoire. Toute mémoire allouée
sur la heap doit être proprement libérée avant la fin de l'éxecution.
Vous pouvez pour cela utiliser les différents outils présent sur l'ordinateur,
tels que leaks, valgrind, ou encore e_fence. En cas de fuite mémoire, cochez le flag approprié.
Attachments
 subject  1326 minilibx_mms_20191025_beta 0  1326 minilibx_opengl 0
Partie obligatoire
Nom de l'executable
Vérifiez que le projet compile (sans re-linker) lorsque vous executez la commande
make, et que le nom de l'executable est `cub3D`.
 Yes
 No
Fichier de configuration
Vérifiez que vous pouvez configurer le programme comme demandé et avec le format décrit par
le sujet TOUS les élements suivants :
- la résolution/taille de la fenêtre - R
- chemin vers la texture "nord" - NO
- chemin vers la texture "est" - EA
- chemin vers la texture "sud" - SO
- chemin vers la texture "ouest" - WE
- chemin vers la texture "sprite" - S
- Couleur du sol - F
- Couleur du plafond - C
- la map (cf. sujet pour plus de détails)
Vérifiez également que le programme renvoie une erreur et quitte proprement
quand le fichier de configuration est erroné (clé inconnue, deux fois la même clé, chemin invalide...)
ou que le fichier n'a pas l'extension .cub.
Si ces tests ne passent pas, l'evaluation est terminée et la note finale est 0.
 Yes
 No
Compsant technique d'affichage
Nous allons maintenant évaluer les éléments techniques.
Lancez le programme et effectuez les tests suivants :
Si au moins un test échoue, aucun point ne sera attribué sur cette partie.
- Une fenêtre doit s'ouvrir au lancement du programme si l'argument --save n'est pas donné.
Celle-ci doit rester ouverte pendant toute l'execution du programme et doit avoir la résolution
demandée dans le fichier de configuration
- Une image représentant l'intérieur du labyrinthe doit être affichée dans la fenêtre.
- Lorsque l'argument --save est donné, le programme ne doit pas ouvrir de fenêtre mais créer un fichier
bmp dans la résolution demandée par le fichier de configuration (clé R)
- Cachez une partie de la fenêtre puis toute la fenêtre à l'aide d'une autre fenêtre ou le bord de l'écran,
puis minimisez la fenêtre et ré-affichez la. Dans tous les cas, le contenu doit être consistent.
- Utilisez une résolution (Clé R) dans le fichier de configuration qui est plus grande que la résolution
de l'écran. Le programme doit afficher une fenêtre de la taille de l'écran
 Yes
 No
Évenements basiques utilisateur
Dans cette section, nous allons évaluer la gestion des évenements utilisateurs
du programme. Faites les 3 tests suivants. Si l'un d'eux échoue, aucun point ne
sera donné sur cette section.
- Cliquez sur la croix rouge en haut de la fenêtre. Celle-ci doit se fermer
et quitter le programme correctement.
- Appuyez sur la touche ESC. La fenêtre doit se fermer et le programme
quitter correctement. Nous accepterons qu'une autre touche quitte le programme,
par exemple la touche Q.
- Appuyez sur les touches directionnelles (ou WASD, ZQSD...) dans l'ordre de votre
choix. Chaque pression doit afficher un résultat visible, tels que mouvement du joueur ou
rotation.
 Yes
 No
Mouvements
Dans cette section, nous allons évaluer les déplacement du joueur/orientation
dans le labyrinthe. Faites les 4 tests suivants. Si l'un d'eux échoue, aucun point ne
sera donné sur cette section.
- L'orientation du joueur à l'apparition doit être en accord avec le
fichier de configuration. Testez les 4 points cardinaux.
- Appuyez sur la flèche gauche, puis la flèche droite (ou autre).
Le point de vue doit tourner comme si la tête du joueur se déplacait.
- Appuyez sur la touche haut puis la touche bas (ou autre).
La vue du joueur doit aller en avant et en arrière en ligne droite.
- Pendant ces mouvements, l'affichage n'a pas trop saccadé ?
Le jeu était-il jouable ? Ou etait-ce trop lent ?
 Yes
 No
Murs & Sprites
Dans cette section, nous allons évaluer l'implémentation des murs et des sprites
dans le labyrinthe. Faites les 5 tests suivants. Si l'un d'eux échoue, aucun point ne
sera donné sur cette section.
- Les textures des murs varient dépendant de leur orientation (nord, sud, est, ouest).
Vérifiez que les textures sur les murs et la perspectives sont visibles et corrects.
- Vérifiez que la modification du chemin vers une texture de mur ou de sprite dans le
fichier de configuration change la texture lorsque le programme est relancé.
- Vérifiez qu'un chemin inexistant renvoie une erreur
- Vérifiez que le sprite est bien affiché et peut être présent plusieurs fois dans la même map.
- Vérifiez que la couleur du sol et du plafond sont bien gérés par modification du fichier de
configuration
 Yes
 No
Error management
Dans cette section, nous allons évaluer la gestion d'erreur et la
bonne marche du programme. Faites les 5 tests suivants. Si l'un
d'eux échoue, aucun point ne sera donné sur cette section.
- Lancez le programme en utilisant plusieurs arguments et des
valeurs aléatoires. Même si le programme n'a pas besoin d'arguments,
il est critique que ces arguments n'altèrent le programme ou créent des
erreurs non-gérées.
- Vérifiez qu'il n'y a pas de fuites mémoires. Utilisez votre outil de vérification
préféré et assurez vous que la mémoire n'augmente pas à chaque action.
- Roulez votre tête (ou bras) sur le clavier. Le programme ne doit pas
afficher de comportement étrange et doit rester fonctionnel.
- Modifiez la map. Le programme ne doit pas montrer de comportements étranges
si la map est bien configurée, et sinon le programme doit renvoyer une erreur.
 Yes
 No
Bonus
Les bonus ne seront évalués que si votre partie obligatoire est parfaite. Par parfaite, nous voulons naturellement dire que tout est complet, que ca n'échoue dans aucun cas de figure, même en cas d'erreur terrible comme un mauvais usage ou autre. Si vous n'avez pas tous les points de la partie obligatoire, votre partie bonus sera totalement ignorée.
Quand je serai grand, je m'appellerai John Carmak
Ajoutez un point par bonus fonctionnel si celui-ci est inclus dans
la partie bonus du sujet.
Rate it from 0 (failed) through 5 (excellent)
Toujours plus?
Pareil, mais ajoutez un point pour deux bonus faits.
Arrondissez vers le haut si nécessaire (9 bonus équivaut à 5/5)
Same as before, but add one point when two more bonuses of
the list are well implemented and fully functionnal. Round it
up if necessary (9 bonus is 5/5).